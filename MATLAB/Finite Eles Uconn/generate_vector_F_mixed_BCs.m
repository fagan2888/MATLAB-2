%Joshua Enxing
%University of Connecticut
%MA5520
%Due 2/19/16

%generates the vector F as discussed in class
function F = generate_vector_F_mixed_BCs(f, z, theta, alpha, beta, a, b, n, m)
syms x;
F = zeros(n,1);

for i=1:n-1
    %integrate f*theta_i on the interval x_(i-1) to x_i using 
    %g-l quadrature weights and abcissas generated by provided code
    [y,w] = gl_weight(z(i),z(i+1),m);
    for j=1:length(y)
        F(i) = F(i) + subs(f*theta(i+1),x,y(j))*w(j);
    end
    
    %integrate f*theta_i on the interval x_i to x_(i+1) using 
    %g-l quadrature weights and abcissas generated by provided code
    [y,w] = gl_weight(z(i+1),z(i+2),m);
    for j=1:length(y)
        F(i) = F(i) + subs(f*theta(i+1),x,y(j))*w(j);
    end
end

[y,w] = gl_weight(z(n),z(n+1),m);
for j=1:length(y)
    F(n) = F(n) + subs(f*theta(n+1),x,y(j))*w(j);
end
F(n) = F(n) + beta;

%generate weights and abcissas for extra term of F_1
[y1,w1] = gl_weight(z(1),z(2),m);
for j=1:length(y1)
    %integrate -alpha*[a*(theta_0)'*(theta_1)' + b*theta_0*theta_1] on
    %[x_0,x_1] using g-l quadrature weights and abcissas
    F(1) = F(1) - alpha*subs(a*(-1/(z(2))^2)+(b*(x-z(2))*(x-z(1)))/(-(z(1)-z(2))^2),x,y1(j))*w1(j);
end
